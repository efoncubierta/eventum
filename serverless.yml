service:
  name: eventum

frameworkVersion: ">=1.0.0 <2.0.0"

plugins:
  - serverless-webpack

custom:
  aws:
    dynamodb:
      events:
        tableName: ${self:service.name}-events-${self:provider.stage}
      snapshots:
        tableName: ${self:service.name}-snapshots-${self:provider.stage}
    kinesis:
      events:
        streamName: ${self:service.name}-events-${self:provider.stage}
    s3:
      prefix: ezequiel
      events:
        bucketName: ${self:custom.aws.s3.prefix}-${self:service.name}-events-${self:provider.stage}

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-west-1
  environment:
    EVENTS_TABLE: ${self:custom.aws.dynamodb.events.tableName}
    SNAPSHOTS_TABLE: ${self:custom.aws.dynamodb.snapshots.tableName}
    EVENTS_STREAM: ${self:custom.aws.kinesis.events.streamName}
    EVENTS_BUCKET: ${self:custom.aws.s3.events.bucketName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource: "arn:aws:dynamodb:*"
    # - Effect: "Allow"
    #   Action:
    #     - "kinesis:PutRecord"
    #     - "kinesis:PutRecords"
    #   Resource:
    #     Fn::GetAtt:
    #       - ${self:custom.aws.kinesis.events.streamName}
    #       - Arn

package:
  individually: true

functions:
  - ${file(serverless/api-functions.yml)}

resources:
  - ${file(serverless/dynamodb.yml)}
  - ${file(serverless/s3.yml)}
  # - ${file(serverless/kinesis.yml)}