api_aggregates_journal_get:
  handler: src/lambda/api/aggregates/journal/get.handler
  events:
    - http:
        path: api/aggregates/{aggregateId}/journal
        method: get
        cors: true

api_aggregates_snapshots_get:
  handler: src/lambda/api/aggregates/snapshots/get.handler
  events:
    - http:
        path: api/aggregates/{aggregateId}/snapshots/{sequence}
        method: get
        cors: true

api_aggregates_snapshots_post:
  handler: src/lambda/api/aggregates/snapshots/post.handler
  events:
    - http:
        path: api/aggregates/{aggregateId}/snapshots
        method: post
        cors: true

api_aggregates_events_get:
  handler: src/lambda/api/aggregates/events/get.handler
  events:
    - http:
        path: api/aggregates/{aggregateId}/events/{sequence}
        method: get
        cors: true

api_events_post:
  handler: src/lambda/api/events/post.handler
  events:
    - http:
        path: api/events
        method: post
        cors: true
  # events:
  #   - stream:
  #     type: kinesis
  #     arn:
  #       Fn::GetAtt:
  #         - ${self:provider.environment.EVENTS_STREAM}
  #         - Arn
  #     batchSize: 50

api_replay_post:
  handler: src/lambda/api/replay/post.handler
  events:
    - http:
        path: api/replay
        method: post
        cors: true